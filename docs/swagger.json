{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "GoTemplate is a microservice example that follows clean architecture",
        "title": "GoTemplate API",
        "contact": {
            "name": "Javier Aguilera",
            "email": "jaguilerapuerta@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/kafkaphoenix/gotemplate/?tab=MIT-1-ov-file#readme"
        },
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the health status of the service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "operationId": "health-check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/http_server.StatusResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Returns a list of Users optionally filtered by country, limit and offset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List Users",
                "operationId": "list-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country of the user",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of users to be listed",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset of users to be listed",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "description": "Creates a new User based on the data provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a User",
                "operationId": "create-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First name of the user",
                        "name": "FirstName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last name of the user",
                        "name": "LastName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nickname of the user",
                        "name": "Nickname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password of the user",
                        "name": "Password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email of the user",
                        "name": "Email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Country of the user",
                        "name": "Country",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "description": "Removes a User based on the given ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a User",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid user ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "description": "Updates a User based on the given ID and the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a User",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "First name of the user",
                        "name": "FirstName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last name of the user",
                        "name": "LastName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nickname of the user",
                        "name": "Nickname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password of the user",
                        "name": "Password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email of the user",
                        "name": "Email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Country of the user",
                        "name": "Country",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.User": {
            "type": "object",
            "required": [
                "country",
                "email",
                "first_name",
                "last_name",
                "nickname",
                "password"
            ],
            "properties": {
                "country": {
                    "type": "string",
                    "example": "UK"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-07-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@aexample.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "nickname": {
                    "type": "string",
                    "example": "johndoe"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-07-01T00:00:00Z"
                }
            }
        },
        "http_server.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        }
    }
}